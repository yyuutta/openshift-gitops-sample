apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cluster-sample-restore
  namespace: <namespace>
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.3
  minSyncReplicas: 1
  maxSyncReplicas: 1
  postgresql:
    parameters:
      archive_mode: "on"
      archive_timeout: 5min
      tcp_keepalives_idle: '600'
      tcp_keepalives_interval: '60'
      tcp_keepalives_count: '6'
      shared_buffers: 512MB
      work_mem: 4MB
      effective_cache_size: 1GB
      max_connections: '50'
      max_wal_size: 256MB
      min_wal_size: 128MB
      checkpoint_timeout: '5min'
      checkpoint_completion_target: '0.7'
      log_min_duration_statement: '10s'
      pg_stat_statements.max: '1000'
      timezone: Asia/Tokyo
      log_timezone: Asia/Tokyo
      shared_preload_libraries: 'pg_stat_statements'
#    pg_hba:
#      - host all all 0.0.0.0/0 md5

    podTemplate:
      spec:
        containers:
          - name: exporter
            image: quay.io/prometheuscommunity/postgres-exporter
            args:
              - '--extend.query-path=/etc/postgres-exporter/queries.yaml'
            env:
              - name: DATA_SOURCE_URI
                value: "localhost:5432/app?sslmode=disable"
              - name: DATA_SOURCE_USER
                value: "app"
              - name: DATA_SOURCE_PASS
                valueFrom:
                  secretKeyRef:
                    name: cluster-sample-restore-app
                    key: password
            ports:
              - name: metrics
                containerPort: 9187
            volumeMounts:
              - name: queries
                mountPath: /etc/postgres-exporter
                readOnly: true
        volumes:
          - name: queries
            configMap:
              name: postgres-exporter-queries

  bootstrap:
    recovery:
      backup:
        name: backup-sample

  enableSuperuserAccess: true
  superuserSecret:
    name: cluster-superuser

  storage:
    storageClass: <storageClassname>
    size: 2Gi

  walStorage:
    storageClass: <storageClassname>
    size: 2Gi

  backup:
    barmanObjectStore:
      data:
        immediateCheckpoint: true
        compression: bzip2
        encryption: ""
      destinationPath: 's3://<your-bucket>/'
      endpointCA:
        key: ca.crt
        name: cohesity-ca
      endpointURL: 'https://<your-cohesity-endpoint>:3000'
      s3Credentials:
        accessKeyId:
          key: ACCESS_KEY_ID
          name: cohesity-creds
        secretAccessKey:
          key: ACCESS_SECRET_KEY
          name: cohesity-creds
      wal:
        compression: bzip2
        encryption: ""
    retentionPolicy: 1d
    target: prefer-standby

  monitoring:
    enablePodMonitor: true
